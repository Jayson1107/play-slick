<#-- Template for autogenerated tuple handling file -->
package util
/**
 * tuple helpers for safely adding and matching elements
 */
package object projections{
  import slick.lifted._
  import play.api.db.slick.Config.driver.simple._
  import tuples._
  import schema._
  //import play.api.db.slick.Config.driver.simple._
  import models.schema.interfaces._
  trait ProjectionsOptionLifting[E] extends Table[E] with MappingHelpers[E]{
    table => 
    trait ProjectionOptionLifter[E,P <: Projection[_]]{
      def mapToOption : ColumnBase[Option[E]]
    }
<#list 2..22 as i>
    implicit def projection${i}OptionLifter[<#list 1..i as j>T${j}<#if i != j>,</#if></#list>](p: => Projection${i}[<#list 1..i as j>T${j}<#if i != j>,</#if></#list>]) = new ProjectionOptionLifter[E,Projection${i}[<#list 1..i as j>T${j}<#if i != j>,</#if></#list>]]{
      def optionColumns = p match { case Projection(<#list 1..i as j>_${j}<#if i != j>,</#if></#list>) => <#list 1..i as j>_${j}.?<#if i != j> ~ </#if></#list> }
      def mapToOption = optionColumns mapOption { _.liftOption.map(table.mapping.create.asInstanceOf[((<#list 1..i as j>T${j}<#if i != j>,</#if></#list>)) => E]) }
    }
</#list>
  }
}
